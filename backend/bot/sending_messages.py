import os

import django
from asgiref.sync import sync_to_async
from django.shortcuts import get_object_or_404
from dotenv import load_dotenv
from telegram import Bot

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'task_tracker.settings')
django.setup()

from users.models import User

load_dotenv()
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')


async def send_telegram_notification(context):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–¥–∞—á –≤ Telegram."""

    try:
        bot = Bot(token=TELEGRAM_TOKEN)

        user = await sync_to_async(
            get_object_or_404)(User, username=context.get('assigned_to'))

        chat_id = await sync_to_async(lambda: user.profile.telegram_chat_id)()

        text = (f'–ü—Ä–∏–≤–µ—Ç, {context.get("assigned_to")}! üëã\n\n'
                f'–ü—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –¥–µ–¥–ª–∞–π–Ω –ø–æ –∑–∞–¥–∞—á–µ: '
                f'{context.get("title")}.\n'
                f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –¥–µ–¥–ª–∞–π–Ω–∞: {context.get("deadline")}.\n'
                f'–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞—á—É: {context.get("link")}.')

        await bot.send_message(chat_id, text)

    except Exception as e:
        print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}')
