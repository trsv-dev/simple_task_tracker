import logging
import sys

import django

from asgiref.sync import sync_to_async
from django.conf import settings
from telegram.ext import (CommandHandler, ApplicationBuilder,
                          MessageHandler, filters)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Django
django.setup()

# –ò —É–∂–µ –ø–æ—Ç–æ–º –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–æ–¥—É–ª–∏ –∏–∑ Django
from users.models import Profile

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

# –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
# logging.basicConfig(
#     format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
#     level=logging.INFO
# )


# –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–∞ –≤ —Ñ–∞–π–ª
# –ü–æ–¥–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª
logging.basicConfig(
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    filename='test_bot.log',
    filemode='w'
)


# –í —Ñ—É–Ω–∫—Ü–∏–∏ start –∏–∑–º–µ–Ω—è–µ–º –µ—ë —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –∏—Å–∫–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ
# telegram_username
async def start(update, context):
    """–õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start."""

    chat = update.effective_chat
    chat_id = chat.id
    username = update.message.chat.username

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_username
    try:
        profile = await sync_to_async(Profile.objects.get)(
            telegram_username=username)

        profile.telegram_chat_id = chat_id

        await sync_to_async(profile.save)()
        msg = (f'–ü—Ä–∏–≤–µ—Ç, {username}! ‚úåÔ∏è –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ –∏ '
               f'–≤–∞—à chat_id —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤ —Ç—Ä–µ–∫–µ—Ä–µ –ø–æ—è–≤—è—Ç—Å—è '
               f'–ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è - –º—ã –≤–∞—Å –æ–ø–æ–≤–µ—Å—Ç–∏–º!')

    except Profile.DoesNotExist:
        msg = (f'–ü—Ä–∏–≤–µ—Ç, {username}! ‚úåÔ∏è –ú—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞—à Telegram username –≤ '
               f'–±–∞–∑–µ. –ï—Å–ª–∏ –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –∏ —É–∫–∞–∂–µ—Ç–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ '
               f'–≤–∞—à username –≤ Telegram, —Ç–æ –≤–∞–º –Ω–∞—á–Ω—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å '
               f'—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏—Ö—Å—è –¥–µ–¥–ª–∞–π–Ω–∞—Ö –∏ –¥—Ä—É–≥–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö.')

    await context.bot.send_message(chat_id, msg)


async def default_answer(update, context):
    """–õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."""

    chat = update.effective_chat
    chat_id = chat.id

    msg = '–ü–æ–∫–∞ —è –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—É /start, –∏–∑–≤–∏–Ω–∏—Ç–µ üòî'

    text = update.message.text

    if text != '/start' or text.startswitch('/'):
        await context.bot.send_message(chat_id, msg)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."""

    if not settings.TELEGRAM_TOKEN:
        logging.critical('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
        sys.exit(1)
    logging.info(
        '–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±–æ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç'
    )
    logging.info('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞')

    # —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Application –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    application = ApplicationBuilder().token(settings.TELEGRAM_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –æ—Ç–≤–µ—á–∞–µ–º –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π –Ω–∞
    # –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    start_handler = CommandHandler('start', start)
    default_answer_handler = MessageHandler(
        filters.TEXT | filters.COMMAND, default_answer
    )

    application.add_handler(start_handler)
    application.add_handler(default_answer_handler)

    # –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    application.run_polling()


if __name__ == '__main__':
    main()
